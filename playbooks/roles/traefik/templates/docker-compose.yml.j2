version: "3.8"

services:
  traefik:
    image: "traefik:v2.2.5"
    restart: unless-stopped
    container_name: "{{ project_name }}_traefik"
    networks:
      - ot_network
      - ot_uat_network
    command:
      - --api
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker.exposedbydefault=false
      #- --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email={{ traefik_acme_email }}
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
      # config to get qualys-ssl-labs-testssl grade A
      - "--providers.file.filename=/traefik_conf.yml"
    ports:
      - 80:80
      # - 8080:8080
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ traefik_dir }}/letsencrypt:/letsencrypt"
      - "{{ traefik_dir }}/traefik_conf.yml:/traefik_conf.yml"
    labels:
      # Dashboard
      # Explicitly tell Traefik to expose this container
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`t.{{ app_domain }}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=leresolver
      - traefik.http.routers.traefik.entrypoints=websecure

      # Authentication
      - traefik.http.routers.traefik.middlewares=traefik-auth
      - traefik.http.middlewares.traefik-auth.basicauth.users={{ traefik_auth }}

      # Global redirect to https
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https

      # Middleware redirect
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

      # Cyphers Key Exchange to 100%
      - traefik.http.middlewares.securedheaders.headers.forcestsheader=true
      - traefik.http.middlewares.securedheaders.headers.sslRedirect=true
      - traefik.http.middlewares.securedheaders.headers.STSPreload=true
      - traefik.http.middlewares.securedheaders.headers.ContentTypeNosniff=true
      - traefik.http.middlewares.securedheaders.headers.BrowserXssFilter=true
      - traefik.http.middlewares.securedheaders.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.securedheaders.headers.STSSeconds=315360000

      # test redirect to a host outside docker
      # - traefik.http.routers.website_router.rule=Host(`website.domain.tld`)
      # - traefik.http.routers.website_router.entrypoints=websecure
      # - traefik.http.routers.website_router.tls.certresolver=leresolver
      # - traefik.http.routers.website_router.service=sonarr_service
      # - traefik.http.services.website_service.loadbalancer.server.url=http://ip_on_host_network
      # - traefik.http.services.website_service.loadbalancer.server.port=website_port

networks:
  ot_network:
    external: true

  ot_uat_network:
    external: true
